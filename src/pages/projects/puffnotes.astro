---
import Layout from "../../layouts/main.astro";
import PageHeading from "../../components/page-heading.astro";

// Hardcoded project data
const project = {
  name: "PuffNotes",
  description: "Cozy, Minimalist Note Taker with AI.",
  image: "/assets/images/projects/PuffNotes.png",
  githubUrl: "https://github.com/rajin-khan/PuffNotes",
  externalUrl: "https://puff-notes.vercel.app",
  tags: [],
  features: [
    { name: "AI Beautify", description: "Turn rough ideas into polished notes with one click.", icon: "‚ú®" },
    { name: "Local First", description: "Saves as .md files on your device, no cloud needed.", icon: "üíæ" },
    { name: "Calm UI", description: "Glassmorphism design with focus mode.", icon: "üßò‚Äç‚ôÇÔ∏è" },
    { name: "Markdown Simplicity", description: "Compatible with any markdown reader.", icon: "üß†" }
  ],
  useCases: [
    { name: "Students", description: "Effortless note-taking for classes.", emoji: "üß†" },
    { name: "Writers", description: "Distraction-free scratchpad for ideas.", emoji: "‚úçÔ∏è" },
    { name: "Coders", description: "Offline-first app for quick notes.", emoji: "‚ö°" },
    { name: "Thinkers", description: "Dump thoughts without fuss.", emoji: "üåô" },
  ],
  roadmap: [
    { name: "Theming", status: "Planned" },
    { name: "Embeddable AI Prompts", status: "Planned" },
    { name: "Drag-and-Drop Images", status: "Planned" },
    { name: "Tag + Folder Organization", status: "Planned" }
  ]
};
---

<Layout title={project.name}>
  <section class="relative z-20 max-w-2xl mx-auto my-12 px-7 lg:px-0">
    <style>
      /* Custom Styles for Puffnotes Page */
      .puffnotes-section {
        margin-bottom: 2.5rem;
      }

      @keyframes fadeIn {
        0% { opacity: 0; }
        100% { opacity: 1; }
      }

      @keyframes slideInUp {
        0% { opacity: 0; transform: translateY(20px); }
        100% { opacity: 1; transform: translateY(0); }
      }

      @keyframes glowPulse {
        0%, 100% { 
          box-shadow: 0 0 5px rgba(139, 111, 71, 0.3), 0 0 10px rgba(74, 55, 40, 0.3); 
        }
        50% { 
          box-shadow: 0 0 15px rgba(139, 111, 71, 0.6), 0 0 20px rgba(74, 55, 40, 0.6); 
        }
      }

      .glow-pulse {
        animation: glowPulse 2s infinite ease-in-out;
      }

      /* Light mode subtle glow */
      html:not(.dark) .glow-pulse {
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        animation: none;
      }

      /* Dark mode maintains glow animation */
      .dark .glow-pulse {
        animation: glowPulse 2s infinite ease-in-out;
      }

      .fade-in {
        animation: fadeIn 0.8s ease-in-out;
      }

      .slide-in-up {
        animation: slideInUp 0.6s ease-out forwards;
      }

      .banner-image {
        border: 2px solid transparent;
        background: linear-gradient(45deg, #f5f5f5, #8b6f47);
        border-radius: 1rem;
        padding: 4px;
        transition: transform 0.3s ease;
      }

      .banner-image:hover {
        transform: scale(1.02);
      }

      .tags-container {
        opacity: 1;
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 1rem;
      }

      .cta-buttons {
        opacity: 1;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        margin: 1.5rem 0;
      }

      @media (min-width: 640px) {
        .cta-buttons {
          flex-direction: row;
        }
      }

      .features-grid, .use-cases-grid, .roadmap-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1rem;
        margin-top: 1.5rem;
      }

      @media (min-width: 640px) {
        .features-grid, .use-cases-grid, .roadmap-grid {
          grid-template-columns: repeat(2, 1fr);
        }
      }

      .feature-card, .use-case-card, .roadmap-card {
        border: 1px solid;
        border-radius: 0.75rem;
        padding: 1rem;
        transition: all 0.3s ease;
        opacity: 1;
        background-color: transparent;
      }

      /* Light mode card styles */
      html:not(.dark) .feature-card,
      html:not(.dark) .use-case-card,
      html:not(.dark) .roadmap-card {
        border-color: rgba(74, 55, 40, 0.2);
        background-color: rgba(245, 245, 245, 0.5);
      }

      html:not(.dark) .feature-card:hover,
      html:not(.dark) .use-case-card:hover,
      html:not(.dark) .roadmap-card:hover {
        transform: translateY(-5px);
        border-color: rgba(74, 55, 40, 0.5);
        box-shadow: 0 5px 15px rgba(74, 55, 40, 0.2);
        background-color: rgba(250, 250, 250, 0.8);
      }

      /* Dark mode card styles */
      .dark .feature-card,
      .dark .use-case-card,
      .dark .roadmap-card {
        border-color: rgba(139, 111, 71, 0.2);
        background-color: rgba(50, 40, 30, 0.3);
      }

      .dark .feature-card:hover,
      .dark .use-case-card:hover,
      .dark .roadmap-card:hover {
        transform: translateY(-5px);
        border-color: rgba(139, 111, 71, 0.5);
        box-shadow: 0 5px 15px rgba(139, 111, 71, 0.3);
        background-color: rgba(70, 60, 50, 0.5);
      }

      .feature-card .icon, .use-case-card .emoji {
        font-size: 1.5rem;
        margin-right: 0.75rem;
      }

      /* Light mode icon colors */
      html:not(.dark) .feature-card .icon,
      html:not(.dark) .use-case-card .emoji {
        color: #4a3728;
      }

      /* Dark mode icon colors */
      .dark .feature-card .icon,
      .dark .use-case-card .emoji {
        color: #8b6f47;
      }

      .feature-card h3, .use-case-card h3, .roadmap-card h3 {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 0.25rem;
        color: inherit;
      }

      /* Light mode text colors */
      html:not(.dark) .feature-card h3,
      html:not(.dark) .use-case-card h3,
      html:not(.dark) .roadmap-card h3 {
        color: #4a3728;
      }

      html:not(.dark) .feature-card p,
      html:not(.dark) .use-case-card p,
      html:not(.dark) .roadmap-card p {
        color: #6b5847;
      }

      /* Dark mode text colors */
      .dark .feature-card h3,
      .dark .use-case-card h3,
      .dark .roadmap-card h3 {
        color: #ffffff;
      }

      .dark .feature-card p,
      .dark .use-case-card p,
      .dark .roadmap-card p {
        color: #d4d4d8;
      }

      .feature-card p, .use-case-card p, .roadmap-card p {
        font-size: 0.875rem;
      }

      .roadmap-card .status {
        font-size: 0.75rem;
        font-weight: 500;
        padding: 0.25rem 0.5rem;
        border-radius: 1rem;
        display: inline-block;
        margin-bottom: 0.5rem;
      }

      /* Status badge colors for both modes */
      .roadmap-card .status {
        color: #8b6f47;
        background: rgba(139, 111, 71, 0.1);
      }

      /* Light mode status badges */
      html:not(.dark) .roadmap-card .status {
        color: #4a3728;
        background: rgba(74, 55, 40, 0.1);
      }

      .section-heading {
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        position: relative;
        opacity: 1;
      }

      /* Light mode heading color */
      html:not(.dark) .section-heading {
        color: #4a3728;
      }

      /* Dark mode heading color */
      .dark .section-heading {
        color: #ffffff;
      }

      .section-heading::after {
        content: '';
        position: absolute;
        bottom: -0.5rem;
        left: 0;
        width: 50px;
        height: 2px;
        background: linear-gradient(to right, #f5f5f5, #8b6f47);
        border-radius: 1px;
      }

      @media (min-width: 640px) {
        .section-heading {
          font-size: 1.75rem;
        }
      }

      .prose p {
        margin-bottom: 1rem;
      }

      /* Light mode prose colors */
      html:not(.dark) .prose p {
        color: #6b5847;
      }

      html:not(.dark) .prose strong {
        color: #4a3728;
      }

      /* Dark mode prose colors */
      .dark .prose p {
        color: #d4d4d8;
      }

      .dark .prose strong {
        color: #ffffff;
      }

      .prose ul {
        list-style-type: disc;
        list-style-position: inside;
        margin: 1rem 0;
      }

      .prose li {
        margin-bottom: 0.5rem;
      }

      /* Light mode list colors */
      html:not(.dark) .prose ul {
        color: #6b5847;
      }

      /* Dark mode list colors */
      .dark .prose ul {
        color: #d4d4d8;
      }
    </style>

    <!-- Main Section -->
    <div class="puffnotes-section fade-in">
      <PageHeading
        title={project.name}
        description={project.description}
      />

      <!-- Banner Image -->
      <div class="my-4">
        <img
          src={project.image}
          alt={project.name}
          class="banner-image w-full h-auto rounded-lg aspect-[16/9] object-cover glow-pulse"
        />
      </div>

      <!-- Tags -->
      <div class="tags-container slide-in-up">
        {project.tags.map((tag) => (
          <span
            class={`px-2 py-1 text-xs font-semibold rounded-lg bg-gradient-to-r ${tag.gradient} text-white`}
          >
            {tag.name}
          </span>
        ))}
      </div>

      <!-- CTA Buttons -->
      <div class="cta-buttons slide-in-up" style="animation-delay: 0.2s;">
        <a
          href={project.externalUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-block px-4 py-1.5 text-sm font-medium rounded-full border border-gray-300 dark:border-neutral-700 bg-gray-900 dark:bg-neutral-200 text-white dark:text-neutral-900 transition-all duration-300 hover:bg-gray-100 dark:hover:bg-neutral-900 hover:text-gray-900 dark:hover:text-neutral-100 glow-pulse"
        >
          Visit Live Site
        </a>
        <a
          href={project.githubUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-block px-4 py-1.5 text-sm font-medium rounded-full border border-gray-300 dark:border-neutral-700 bg-transparent text-gray-900 dark:text-neutral-200 transition-all duration-300 hover:bg-gray-900 dark:hover:bg-neutral-200 hover:text-white dark:hover:text-neutral-900"
        >
          View on GitHub
        </a>
      </div>
    </div>

    <!-- Overview Section (Paragraphs) -->
    <div class="puffnotes-section">
      <h2 class="section-heading slide-in-up">What is PuffNotes?</h2>
      <div class="prose prose-sm sm:prose-base dark:prose-invert slide-in-up" style="animation-delay: 0.2s;">
        <p>
          I love taking notes. But I hate taking long, long notes. PuffNotes was born to solve this problem. I usually take notes on my laptop in class, but there‚Äôs often so much to type out that I end up getting distracted, missing important points, or losing track of what‚Äôs happening in the lecture. Frustrated, I decided to create a solution tailored to my exact needs‚ÄîPuffNotes, a minimalist, local-first, markdown-based note-taking app designed to make your messy, vague ideas look smart and structured with just one click. I kept it minimal, cozy, fun, and easy, ensuring it‚Äôs a perfect fit for anyone facing similar challenges. Built for lazy writers, distracted students, and tired creatives, PuffNotes offers a quiet, beautiful space to jot down thoughts without the clutter of traditional productivity tools. Powered with lightning-fast AI, it transforms rough fragments into polished, organized notes in seconds.
        </p>
        <p>
          With PuffNotes, there‚Äôs no need for logins, cloud storage, or internet access after the initial load‚Äîyour notes are saved directly to your device as .md files. Its serene interface, soft animations, and focus mode create a calm writing environment, while features like autosave and AI beautification ensure your thoughts are captured effortlessly. Whether you're a student, writer, or late-night thinker, PuffNotes is your cozy companion for effortless note-taking.
        </p>
      </div>
    </div>

    <!-- Features Section -->
    <div class="puffnotes-section">
      <h2 class="section-heading slide-in-up">Key Features</h2>
      <div class="features-grid">
        {project.features.map((feature, index) => (
          <div class="feature-card slide-in-up" style={`animation-delay: ${0.2 * (index + 1)}s;`}>
            <div class="flex items-center">
              <span class="icon">{feature.icon}</span>
              <h3>{feature.name}</h3>
            </div>
            <p>{feature.description}</p>
          </div>
        ))}
      </div>
    </div>

    <!-- Use Cases Section -->
    <div class="puffnotes-section">
      <h2 class="section-heading slide-in-up">Perfect For</h2>
      <div class="use-cases-grid">
        {project.useCases.map((useCase, index) => (
          <div class="use-case-card slide-in-up" style={`animation-delay: ${0.2 * (index + 1)}s;`}>
            <span class="emoji">{useCase.emoji}</span>
            <div>
              <h3>{useCase.name}</h3>
              <p>{useCase.description}</p>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Privacy and Tech Stack Section (Paragraphs) -->
    <div class="puffnotes-section">
      <h2 class="section-heading slide-in-up">Privacy & Technology</h2>
      <div class="prose prose-sm sm:prose-base dark:prose-invert slide-in-up" style="animation-delay: 0.2s;">
        <p>
          Privacy is a cornerstone of PuffNotes. Your notes are saved directly to your device as .md files, with no cloud storage, no accounts, and no tracking. After the initial load, PuffNotes works entirely offline, ensuring your thoughts remain yours. The <strong>AI</strong> beautification feature only activates when you choose to use it, and even then, your data stays secure. This local-first approach makes PuffNotes a safe haven for your ideas.
        </p>
        <p>
          PuffNotes is built with a modern tech stack for a seamless experience. The frontend uses <strong>React</strong> and <strong>Vite</strong> for a fast, responsive interface, styled with <strong>Tailwind CSS</strong> for a cozy, relaxing design. AI powers the beautification feature, making your notes polished and professional with minimal effort.
        </p>
      </div>
    </div>

    <!-- Roadmap Section -->
    <div class="puffnotes-section">
      <h2 class="section-heading slide-in-up">What's Next</h2>
      <div class="roadmap-grid">
        {project.roadmap.map((item, index) => (
          <div class={`roadmap-card slide-in-up`} style={`animation-delay: ${0.2 * (index + 1)}s;`}>
            <span class="status">{item.status}</span>
            <h3>{item.name}</h3>
          </div>
        ))}
      </div>
    </div>

    <!-- Final Call to Action -->
    <div class="puffnotes-section">
      <h2 class="section-heading slide-in-up">Get Started</h2>
      <div class="prose prose-sm sm:prose-base dark:prose-invert slide-in-up" style="animation-delay: 0.2s;">
        <p>
          Ready for effortless note taking? Start using PuffNotes now and experience the magic. Want to contribute or explore the code? Check out the project on GitHub!
        </p>
      </div>
      <div class="cta-buttons slide-in-up" style="animation-delay: 0.4s;">
        <a
          href={project.externalUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-block px-4 py-1.5 text-sm font-medium rounded-full border border-gray-300 dark:border-neutral-700 bg-gray-900 dark:bg-neutral-200 text-white dark:text-neutral-900 transition-all duration-300 hover:bg-gray-100 dark:hover:bg-neutral-900 hover:text-gray-900 dark:hover:text-neutral-100 glow-pulse"
        >
          Start Writing
        </a>
        <a
          href={project.githubUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-block px-4 py-1.5 text-sm font-medium rounded-full border border-gray-300 dark:border-neutral-700 bg-transparent text-gray-900 dark:text-neutral-200 transition-all duration-300 hover:bg-gray-900 dark:hover:bg-neutral-200 hover:text-white dark:hover:text-neutral-900"
        >
          Contribute on GitHub
        </a>
      </div>
    </div>

    <!-- Script for Animations -->
    <script is:inline>
      document.addEventListener('DOMContentLoaded', () => {
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('slide-in-up');
            }
          });
        }, { threshold: 0.1 });

        document.querySelectorAll('.slide-in-up').forEach(element => {
          observer.observe(element);
        });

        // Fallback: Ensure elements are visible after a short delay
        setTimeout(() => {
          document.querySelectorAll('.slide-in-up').forEach(element => {
            element.classList.add('slide-in-up');
          });
        }, 1000);
      });
    </script>
  </section>
</Layout>