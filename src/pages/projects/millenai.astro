---
import Layout from "../../layouts/main.astro";
import PageHeading from "../../components/page-heading.astro";

const project = {
  name: "MillenAI",
  description: "A high-performance AI workspace featuring the 'AI Council'‚Äîa multi-agent system for deep, collaborative reasoning.",
  image: "/assets/images/projects/MillenAI.png",
  githubUrl: "https://github.com/rajin-khan/MillenAI",
  externalUrl: "https://millen-ai.vercel.app",
  tags: [],
  features: [
    { name: "The AI Council", description: "Convene specialized AI agents (Researcher, Analyst, Philosopher, Judge) to tackle complex problems from multiple angles.", icon: "üèõÔ∏è" },
    { name: "Advanced Document Processing", description: "Bring your own data. Process images (OCR), PDFs, DOCX, and more, directly in the chat context.", icon: "üìé" },
    { name: "Multi-Model Chat", description: "Seamlessly switch between top open-source models like Llama 3.1 and GPT-OSS in one conversation.", icon: "üß†" },
    { name: "Agentic Tooling", description: "Equip any model with universal web search or engage deep reasoning mode for complex analysis.", icon: "üõ†Ô∏è" },
    { name: "Persistent & Private", description: "Secure Firebase Auth saves your chat history. Your API keys never leave your browser.", icon: "üîí" },
    { name: "Polished UX", description: "A meticulously crafted interface with a real-time token counter, rich Markdown, and stunning animations.", icon: "‚ú®" }
  ],
  useCases: [
    { name: "Strategic Thinkers", description: "Get comprehensive, multi-faceted answers for complex business or research questions.", emoji: "üöÄ" },
    { name: "Developers & Researchers", description: "A fast, open-source playground to test and compare advanced model outputs.", emoji: "üî¨" },
    { name: "Content Creators", description: "Go beyond simple drafts with an AI system that provides research, analysis, and diverse perspectives.", emoji: "‚úçÔ∏è" },
    { name: "AI Power-Users", description: "A unified hub to orchestrate and converse with the world's most powerful LLMs.", emoji: "üíª" }
  ],
  roadmap: [
    { name: "AI Council System", status: "Completed" },
    { name: "Document Processing", status: "Completed" },
    { name: "Multi-API Support", status: "In Progress" },
    { name: "Streaming Responses", status: "In Progress" },
  ],
  team: [
    { name: "Rajin Khan", institution: "North South University", github: "https://github.com/rajin-khan" }
  ]
};
---

<Layout title={project.name}>
  <section class="relative z-20 max-w-2xl mx-auto my-12 px-7 lg:px-0">
    <style>
      .millenai-section {
        margin-bottom: 2.5rem;
      }

      @keyframes fadeIn {
        0% { opacity: 0; }
        100% { opacity: 1; }
      }

      @keyframes slideInUp {
        0% { opacity: 0; transform: translateY(20px); }
        100% { opacity: 1; transform: translateY(0); }
      }

      @keyframes glowPulse {
        0%, 100% { 
          box-shadow: 0 0 5px rgba(52, 211, 153, 0.3), 0 0 10px rgba(34, 211, 238, 0.3); 
        }
        50% { 
          box-shadow: 0 0 15px rgba(52, 211, 153, 0.6), 0 0 20px rgba(34, 211, 238, 0.6); 
        }
      }

      .glow-pulse {
        animation: glowPulse 2s infinite ease-in-out;
      }

      html:not(.dark) .glow-pulse {
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        animation: none;
      }

      .dark .glow-pulse {
        animation: glowPulse 2s infinite ease-in-out;
      }

      .fade-in {
        animation: fadeIn 0.8s ease-in-out;
      }

      .slide-in-up {
        animation: slideInUp 0.6s ease-out forwards;
      }

      .banner-image {
        border: 2px solid transparent;
        background: linear-gradient(45deg, #34d399, #22d3ee);
        border-radius: 1rem;
        padding: 4px;
        transition: transform 0.3s ease;
      }

      .banner-image:hover {
        transform: scale(1.02);
      }

      .tags-container {
        opacity: 1;
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 1rem;
      }

      .cta-buttons {
        opacity: 1;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        margin: 1.5rem 0;
      }

      @media (min-width: 640px) {
        .cta-buttons {
          flex-direction: row;
        }
      }

      .features-grid, .use-cases-grid, .roadmap-grid, .team-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1rem;
        margin-top: 1.5rem;
      }

      @media (min-width: 640px) {
        .features-grid, .use-cases-grid, .roadmap-grid, .team-grid {
          grid-template-columns: repeat(2, 1fr);
        }
      }

      .feature-card, .use-case-card, .roadmap-card, .team-card {
        border: 1px solid;
        border-radius: 0.75rem;
        padding: 1rem;
        transition: all 0.3s ease;
        opacity: 1;
        background-color: transparent;
      }

      html:not(.dark) .feature-card,
      html:not(.dark) .use-case-card,
      html:not(.dark) .roadmap-card,
      html:not(.dark) .team-card {
        border-color: rgba(34, 211, 238, 0.2);
        background-color: rgba(248, 250, 252, 0.5);
      }

      html:not(.dark) .feature-card:hover,
      html:not(.dark) .use-case-card:hover,
      html:not(.dark) .roadmap-card:hover,
      html:not(.dark) .team-card:hover {
        transform: translateY(-5px);
        border-color: rgba(34, 211, 238, 0.5);
        box-shadow: 0 5px 15px rgba(34, 211, 238, 0.2);
        background-color: rgba(255, 255, 255, 0.8);
      }

      .dark .feature-card,
      .dark .use-case-card,
      .dark .roadmap-card,
      .dark .team-card {
        border-color: rgba(52, 211, 153, 0.2);
        background-color: rgba(31, 41, 55, 0.3);
      }

      .dark .feature-card:hover,
      .dark .use-case-card:hover,
      .dark .roadmap-card:hover,
      .dark .team-card:hover {
        transform: translateY(-5px);
        border-color: rgba(52, 211, 153, 0.5);
        box-shadow: 0 5px 15px rgba(52, 211, 153, 0.3);
        background-color: rgba(55, 65, 81, 0.5);
      }

      .feature-card .icon, .use-case-card .emoji {
        font-size: 1.5rem;
        margin-right: 0.75rem;
      }

      html:not(.dark) .feature-card .icon,
      html:not(.dark) .use-case-card .emoji {
        color: #22d3ee;
      }

      .dark .feature-card .icon,
      .dark .use-case-card .emoji {
        color: #34d399;
      }

      .feature-card h3, .use-case-card h3, .roadmap-card h3, .team-card h3 {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 0.25rem;
        color: inherit;
      }

      html:not(.dark) .feature-card h3,
      html:not(.dark) .use-case-card h3,
      html:not(.dark) .roadmap-card h3,
      html:not(.dark) .team-card h3 {
        color: #1f2937;
      }

      .dark .feature-card h3,
      .dark .use-case-card h3,
      .dark .roadmap-card h3,
      .dark .team-card h3 {
        color: #ffffff;
      }
      
      .roadmap-card .status {
        font-size: 0.75rem;
        font-weight: 500;
        padding: 0.25rem 0.5rem;
        border-radius: 1rem;
        display: inline-block;
        margin-bottom: 0.5rem;
      }

      .roadmap-card.completed .status {
        color: #34d399;
        background: rgba(52, 211, 153, 0.1);
      }

      .roadmap-card.in-progress .status {
        color: #60a5fa;
        background: rgba(96, 165, 250, 0.1);
      }

      .section-heading {
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        position: relative;
        opacity: 1;
      }

      .dark .section-heading {
        color: #ffffff;
      }

      .section-heading::after {
        content: '';
        position: absolute;
        bottom: -0.5rem;
        left: 0;
        width: 50px;
        height: 2px;
        background: linear-gradient(to right, #34d399, #22d3ee);
        border-radius: 1px;
      }
    </style>

    <!-- Main Section -->
    <div class="millenai-section fade-in">
      <PageHeading
        title={project.name}
        description={project.description}
      />
      <div class="tags-container">
        {project.tags.map(tag => (
          <span class="inline-block px-2 py-0.5 text-xs font-medium rounded-full border border-gray-300 dark:border-neutral-700 bg-gray-100 dark:bg-neutral-800 text-gray-700 dark:text-neutral-300">{tag}</span>
        ))}
      </div>

      <!-- Banner Image -->
      <div class="my-4">
        <img
          src={project.image}
          alt={project.name}
          class="banner-image w-full h-auto rounded-lg aspect-[16/9] object-cover glow-pulse"
        />
      </div>

      <!-- CTA Buttons -->
      <div class="cta-buttons slide-in-up" style="animation-delay: 0.2s;">
        <a
          href={project.externalUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-block px-4 py-1.5 text-sm font-medium rounded-full border border-gray-300 dark:border-neutral-700 bg-gray-900 dark:bg-neutral-200 text-white dark:text-neutral-900 transition-all duration-300 hover:bg-gray-100 dark:hover:bg-neutral-900 hover:text-gray-900 dark:hover:text-neutral-100 glow-pulse"
        >
          Launch MillenAI
        </a>
        <a
          href={project.githubUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-block px-4 py-1.5 text-sm font-medium rounded-full border border-gray-300 dark:border-neutral-700 bg-transparent text-gray-900 dark:text-neutral-200 transition-all duration-300 hover:bg-gray-900 dark:hover:bg-neutral-200 hover:text-white dark:hover:text-neutral-900"
        >
          View on GitHub
        </a>
      </div>
    </div>

    <!-- Overview Section (Paragraphs) -->
    <div class="millenai-section">
      <h2 class="section-heading slide-in-up">What is MillenAI?</h2>
      <div class="prose prose-sm sm:prose-base dark:prose-invert slide-in-up" style="animation-delay: 0.2s;">
        <p>
          I was drowning in tabs. ChatGPT in one, a new open-source model in another, Perplexity for research‚Äîmy workflow was a mess of lost conversations and fragmented context. I built the first version of MillenAI to solve this, creating a unified workspace to seamlessly switch between models without losing momentum. It was a huge improvement, but a new, deeper problem emerged.
        </p>
        <p>
          When I asked a complex question, like "Should our company invest in decentralized AI?", I realized every AI gave me a single, monolithic answer. One model would be optimistic about the tech, another cautious about the ethics, and a third would focus on the market data. Each answer was useful, but incomplete. To get a truly comprehensive view, I had to manually synthesize these different perspectives, a tedious and error-prone process.
        </p>
        <p>
          That was the moment it all clicked. Why ask one AI to be a jack-of-all-trades when I could assemble a team of specialists? This led to the creation of the <strong>AI Council</strong>. Instead of just one response, MillenAI now convenes a panel of AIs: a web-savvy <strong>Researcher</strong>, a pragmatic <strong>Analyst</strong>, a contrarian <strong>Philosopher</strong>, and a decisive <strong>Judge</strong>. You watch them work in real-time as they research, debate, and synthesize their findings into a final, multi-faceted verdict. It's not just a chat; it's a collaborative intelligence system.
        </p>
      </div>
    </div>

    <!-- Features Section -->
    <div class="millenai-section">
      <h2 class="section-heading slide-in-up">Key Features</h2>
      <div class="features-grid">
        {project.features.map((feature, index) => (
          <div class="feature-card slide-in-up" style={`animation-delay: ${0.2 * (index + 1)}s;`}>
            <div class="flex items-center">
              <span class="icon">{feature.icon}</span>
              <h3>{feature.name}</h3>
            </div>
            <p>{feature.description}</p>
          </div>
        ))}
      </div>
    </div>

    <!-- Use Cases Section -->
    <div class="millenai-section">
      <h2 class="section-heading slide-in-up">Perfect For</h2>
      <div class="use-cases-grid">
        {project.useCases.map((useCase, index) => (
          <div class="use-case-card slide-in-up" style={`animation-delay: ${0.2 * (index + 1)}s;`}>
            <span class="emoji">{useCase.emoji}</span>
            <div>
              <h3>{useCase.name}</h3>
              <p>{useCase.description}</p>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Technology Section (Paragraphs) -->
    <div class="millenai-section">
      <h2 class="section-heading slide-in-up">Technology & Architecture</h2>
      <div class="prose prose-sm sm:prose-base dark:prose-invert slide-in-up" style="animation-delay: 0.2s;">
        <p>
          MillenAI is built with a modern, high-performance tech stack. The frontend is powered by <strong>React 19+</strong> and <strong>Vite</strong>, with styling from <strong>Tailwind CSS v4</strong> and fluid animations from <strong>Framer Motion</strong>. Global state for the AI Council is managed efficiently by <strong>Zustand</strong>.
        </p>
        <p>
          The backend leverages <strong>Firebase Auth</strong> for secure Google Sign-In and <strong>Firestore</strong> for real-time conversation storage. The AI Council's complex workflow is orchestrated by a <strong>Vercel Edge Function</strong>, which streams status updates to the client while making sequential calls to the ultra-fast <strong>Groq API</strong>.
        </p>
      </div>
    </div>

    <!-- Roadmap Section -->
    <div class="millenai-section">
      <h2 class="section-heading slide-in-up">Project Status</h2>
      <div class="roadmap-grid">
        {project.roadmap.map((item, index) => (
          <div class={`roadmap-card slide-in-up ${item.status.toLowerCase().replace(' ', '-')}`} style={`animation-delay: ${0.2 * (index + 1)}s;`}>
            <span class="status">{item.status}</span>
            <h3>{item.name}</h3>
          </div>
        ))}
      </div>
    </div>

    <!-- Final Call to Action -->
    <div class="millenai-section">
      <h2 class="section-heading slide-in-up">Get Started</h2>
      <div class="prose prose-sm sm:prose-base dark:prose-invert slide-in-up" style="animation-delay: 0.2s;">
        <p>
          Ready to experience a smarter way to interact with AI? Launch the app to convene your own AI Council or dive into the open-source codebase on GitHub to contribute.
        </p>
      </div>
      <div class="cta-buttons slide-in-up" style="animation-delay: 0.4s;">
        <a
          href={project.externalUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-block px-4 py-1.5 text-sm font-medium rounded-full border border-gray-300 dark:border-neutral-700 bg-gray-900 dark:bg-neutral-200 text-white dark:text-neutral-900 transition-all duration-300 hover:bg-gray-100 dark:hover:bg-neutral-900 hover:text-gray-900 dark:hover:text-neutral-100 glow-pulse"
        >
          Launch MillenAI
        </a>
        <a
          href={project.githubUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-block px-4 py-1.5 text-sm font-medium rounded-full border border-gray-300 dark:border-neutral-700 bg-transparent text-gray-900 dark:text-neutral-200 transition-all duration-300 hover:bg-gray-900 dark:hover:bg-neutral-200 hover:text-white dark:hover:text-neutral-900"
        >
          Contribute on GitHub
        </a>
      </div>
    </div>

    <!-- Script for Animations -->
    <script is:inline>
      document.addEventListener('DOMContentLoaded', () => {
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('slide-in-up');
            }
          });
        }, { threshold: 0.1 });

        document.querySelectorAll('.slide-in-up').forEach(element => {
          observer.observe(element);
        });

        setTimeout(() => {
          document.querySelectorAll('.slide-in-up').forEach(element => {
            element.classList.add('slide-in-up');
          });
        }, 1000);
      });
    </script>
  </section>
</Layout>